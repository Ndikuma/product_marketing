# Generated by Django 4.2.16 on 2025-05-17 09:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Product name", max_length=200)),
                (
                    "sku",
                    models.CharField(
                        blank=True,
                        help_text="Stock keeping unit",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Regular price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Discounted price",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "purchase_url",
                    models.URLField(
                        help_text="URL where users can buy the product",
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="Product image URL",
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Product description", null=True
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(default=0, help_text="Available stock"),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated targeting tags, e.g., electronics,headphones",
                        max_length=200,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Product category, e.g., Electronics",
                        max_length=100,
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=10, help_text="Send alert when stock falls below this"
                    ),
                ),
                (
                    "notify_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email for low stock notifications",
                        max_length=254,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "indexes": [
                    models.Index(fields=["sku"], name="marketing_p_sku_9b87ad_idx"),
                    models.Index(fields=["tags"], name="marketing_p_tags_2bdb3b_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Ad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Ad name", max_length=200)),
                (
                    "ad_type",
                    models.CharField(
                        choices=[
                            ("banner", "Banner"),
                            ("text", "Text"),
                            ("video", "Video"),
                            ("native", "Native"),
                        ],
                        default="banner",
                        help_text="Type of ad",
                        max_length=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True, help_text="Ad copy or description", null=True
                    ),
                ),
                (
                    "media_url",
                    models.URLField(
                        blank=True,
                        help_text="Ad image or video URL",
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "destination_url",
                    models.URLField(
                        help_text="URL users are directed to",
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                        ],
                        default="draft",
                        help_text="Ad status",
                        max_length=20,
                    ),
                ),
                (
                    "budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Total ad budget",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "daily_budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Daily budget limit",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cost_per_click",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Cost per click",
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "schedule_start",
                    models.DateTimeField(
                        blank=True, help_text="Ad start date/time", null=True
                    ),
                ),
                (
                    "schedule_end",
                    models.DateTimeField(
                        blank=True, help_text="Ad end date/time", null=True
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Timezone for scheduling, e.g., Africa/Johannesburg",
                        max_length=50,
                    ),
                ),
                (
                    "target_location",
                    models.CharField(
                        blank=True, help_text="Target audience location", max_length=200
                    ),
                ),
                (
                    "target_interests",
                    models.CharField(
                        blank=True,
                        help_text="Target audience interests",
                        max_length=200,
                    ),
                ),
                (
                    "target_age_min",
                    models.PositiveIntegerField(
                        blank=True, help_text="Minimum target age", null=True
                    ),
                ),
                (
                    "target_age_max",
                    models.PositiveIntegerField(
                        blank=True, help_text="Maximum target age", null=True
                    ),
                ),
                (
                    "target_gender",
                    models.CharField(
                        choices=[
                            ("all", "All"),
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        default="all",
                        help_text="Target gender",
                        max_length=50,
                    ),
                ),
                (
                    "target_device",
                    models.CharField(
                        choices=[
                            ("all", "All Devices"),
                            ("mobile", "Mobile"),
                            ("desktop", "Desktop"),
                            ("tablet", "Tablet"),
                        ],
                        default="all",
                        help_text="Target device",
                        max_length=20,
                    ),
                ),
                (
                    "target_platform",
                    models.CharField(
                        choices=[
                            ("google", "Google Ads"),
                            ("facebook", "Facebook Ads"),
                            ("instagram", "Instagram Ads"),
                            ("tiktok", "TikTok Ads"),
                            ("x", "X Ads"),
                        ],
                        default="google",
                        help_text="Target platform",
                        max_length=20,
                    ),
                ),
                (
                    "ab_test_group",
                    models.CharField(
                        blank=True,
                        help_text="A/B test group identifier",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "notify_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email for ad notifications",
                        max_length=254,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Promoted product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ads",
                        to="marketing.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ad",
                "verbose_name_plural": "Ads",
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date of metrics"
                    ),
                ),
                (
                    "impressions",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of ad views"
                    ),
                ),
                (
                    "clicks",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of clicks to destination URL"
                    ),
                ),
                (
                    "conversions",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of purchases or sign-ups"
                    ),
                ),
                (
                    "revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Revenue from conversions",
                        max_digits=10,
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Ad spend",
                        max_digits=10,
                    ),
                ),
                (
                    "engagement_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Custom engagement actions, e.g., likes, shares",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ad",
                    models.ForeignKey(
                        help_text="Associated ad",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="marketing.ad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Performance Metric",
                "verbose_name_plural": "Performance Metrics",
                "indexes": [
                    models.Index(fields=["date"], name="marketing_p_date_48e276_idx"),
                    models.Index(
                        fields=["ad", "date"], name="marketing_p_ad_id_c9a58d_idx"
                    ),
                ],
                "unique_together": {("ad", "date")},
            },
        ),
        migrations.AddIndex(
            model_name="ad",
            index=models.Index(fields=["status"], name="marketing_a_status_83ef33_idx"),
        ),
        migrations.AddIndex(
            model_name="ad",
            index=models.Index(
                fields=["schedule_start", "schedule_end"],
                name="marketing_a_schedul_854445_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="ad",
            index=models.Index(
                fields=["ab_test_group"], name="marketing_a_ab_test_f4fb8c_idx"
            ),
        ),
    ]
